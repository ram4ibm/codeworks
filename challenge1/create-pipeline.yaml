parameters:
  - name: ENVIRONMENT
    type: string


jobs:
  - job: BuildAKS

    variables:
      - template: pipeline_variables/aks-variables.yaml
      - name: VAR_ENVIRONMENT_NAME    
        value: '${{ parameters.ENVIRONMENT }}'

    steps:
    - task: TerraformInstaller@0
      displayName: 'Use Terraform 0.13.2'
      inputs:
        terraformVersion: '0.13.2'

    - task: replacetokens@3
      displayName: 'Perform Token Replacement'
      inputs:
        rootDirectory: '$(Build.Repository.LocalPath)/terraform'
        targetFiles: "**/*.*"
        encoding: 'auto'
        writeBOM: true
        actionOnMissing: 'warn'
        keepToken: false
        tokenPrefix: '#{'
        tokenSuffix: '}#'
        useLegacyPattern: false
        enableTelemetry: true


    - script: |
        cd $(Build.Repository.LocalPath)/terraform
        terraform init
      displayName: 'Terraform - Init'

    - script: |
        cd $(Build.Repository.LocalPath)/terraform
        terraform validate
      displayName: 'Terraform - validate'

    - script: |
        cd $(Build.Repository.LocalPath)/terraform
        terraform plan -input=false -no-color
      displayName: 'Terraform - plan'

    - script: |
        cd $(Build.Repository.LocalPath)/terraform
        terraform apply -input=false -no-color -auto-approve
      displayName: 'Terraform - Apply'

    - task: terraform-outputs@0
      displayName: 'Terraform - Outputs'
      inputs:
        workingDirectory: '$(Build.Repository.LocalPath)/terraform'
      
    - script: |
        curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x ./kubectl
        kubectl version --client
        curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
        helm version
      displayName: 'Download required binaries'

    - script: |
        cd $(Build.Repository.LocalPath)/terraform
        terraform output kube_config > $(Build.Repository.LocalPath)/kube_config
        kubectl --kubeconfig=$(Build.Repository.LocalPath)/kube_config get pods --all-namespaces
        helm repo add stable https://kubernetes-charts.storage.googleapis.com/
        helm install --set mongodb.mongodbUsername=rocketchat,mongodb.mongodbPassword=changeme,mongodb.mongodbDatabase=rocketchat,mongodb.mongodbRootPassword=root-changeme --name my-rocketchat stable/rocketchat
        helm install stable/rocketchat --set mongodb.mongodbPassword=$(echo -n $(openssl rand -base64 32)),mongodb.mongodbRootPassword=$(echo -n $(openssl rand -base64 32))
      displayName: 'Sample 3-Tier App'


        

    

    


